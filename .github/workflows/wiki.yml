name: Deploy docs to GitHub Wiki

# This workflow synchronizes the repository's `docs/` content into the
# repository's GitHub Wiki (the separate <repo>.wiki.git repository).
# It copies `docs/` into a temporary directory, adjusts filenames that
# the wiki expects (for example `README.md` -> `Home.md`, and
# `_sidebar.md` -> `_Sidebar.md`), then commits and pushes to the wiki
# remote using the workflow token.
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare wiki content from docs/
        run: |
          rm -rf wiki
          mkdir -p wiki
          cp -r docs/* wiki/ || true
          # Files generated for Pages aren't needed in the wiki
          rm -f wiki/.nojekyll
          rm -f wiki/index.html
          # Ensure the wiki's main page is Home.md (GitHub wiki default)
          if [ -f wiki/README.md ]; then
            cp wiki/README.md wiki/Home.md
          fi
          # GitHub wiki expects a capitalized _Sidebar.md filename
          if [ -f wiki/_sidebar.md ]; then
            cp wiki/_sidebar.md wiki/_Sidebar.md
          fi

      - name: Deploy to GitHub Wiki
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          cd wiki
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Remote URL for the wiki repository
          REMOTE_URL="https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.wiki.git"
          # Try to detect the wiki's existing default branch; fall back to 'main'
          DEFAULT_BRANCH="$(git ls-remote --symref "${REMOTE_URL}" HEAD 2>/dev/null | awk '/^ref:/{print $2; exit}' | sed 's@refs/heads/@@' || true)"
          if [ -z "${DEFAULT_BRANCH}" ]; then
            DEFAULT_BRANCH="main"
          fi
          git checkout -b "${DEFAULT_BRANCH}"
          git add --all
          if git diff --cached --quiet; then
            echo "No changes to deploy to wiki"
            exit 0
          fi
          git commit -m "Sync docs to wiki: ${GITHUB_SHA}"
          # If remote already has the same commit, skip pushing
          REMOTE_COMMIT="$(git ls-remote "${REMOTE_URL}" "refs/heads/${DEFAULT_BRANCH}" | cut -f1)"
          if [ -n "${REMOTE_COMMIT}" ] && [ "$(git rev-parse HEAD)" = "${REMOTE_COMMIT}" ]; then
            echo "Remote wiki already up to date"
            exit 0
          fi
          git remote add wiki "${REMOTE_URL}"
          git push --force wiki "${DEFAULT_BRANCH}"
